<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.chuangyun.modules.sys.dao.SysUserDao">
    <select id="queryObject" resultType="com.chuangyun.modules.sys.entity.SysUserEntity">
		SELECT
            a.*, b.fullname dept_name
        FROM
            sys_user a
        LEFT JOIN
            sys_dept b
        ON
            a.dept_id = b.dept_id
        WHERE user_id = #{value}
	</select>

    <select id="queryList" resultType="com.chuangyun.modules.sys.entity.SysUserEntity">
        SELECT * from (
        select a.*,b.fullname as deptName,
        row_number() over(
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by [${sidx}] ${order}
            </when>
            <otherwise>
                order by user_id desc
            </otherwise>
        </choose>
        ) row
        from sys_user a
        LEFT JOIN sys_dept b
        ON a.dept_id = b.dept_id
        <where>
            <if test="username != null and username.trim() != ''">
                (a.username like ('%' + #{username} + '%')
                or a.full_name like ('%' + #{username} + '%'))
            </if>
        </where>
        ) t1
        <where>
            <if test="offset != null and limit != null">
                t1.row BETWEEN #{offset} AND #{maxrow}
            </if>
        </where>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from sys_user
        <where>
            <if test="createUserId != null">
                and create_user_id = #{createUserId}
            </if>
            <if test="username != null and username.trim() != ''">
                and username like ('%' + #{username} + '%')
            </if>
        </where>
    </select>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
		where ur.user_id = #{userId}
	</select>

    <!-- 查询手机号使用的次数 -->
    <select id="queryCountByMobile" resultType="int">
        select count(1) from sys_user
        where mobile = #{mobile}
    </select>

    <select id="queryByUserName" resultType="com.chuangyun.modules.sys.entity.SysUserEntity">
		select * from sys_user where username = #{username}
	</select>

    <insert id="save" parameterType="com.chuangyun.modules.sys.entity.SysUserEntity" useGeneratedKeys="true"
            keyProperty="userId">
		insert into sys_user
		(
			username,
			full_name,
			password,
			dept_id,
			salt,
			email,
			mobile,
			status,
			create_user_id,
			create_time
		)
		values
		(
			#{username},
			#{fullname},
			#{password},
			#{deptId},
			#{salt},
			#{email}, 
			#{mobile}, 
			#{status}, 
			#{createUserId},
			#{createTime}
		)
	</insert>

    <update id="update" parameterType="com.chuangyun.modules.sys.entity.SysUserEntity">
        update sys_user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="fullname != null">full_name = #{fullname},</if>
            <if test="password != null">password = #{password},</if>
            <if test="email != null">email = #{email},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="status != null">status = #{status},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
        </set>
        where user_id = #{userId}
        <if test="createUserId != null">
            and create_user_id = #{createUserId}
        </if>
    </update>

    <update id="updatePassword" parameterType="map">
		update sys_user set password = #{newPassword} 
			where user_id = #{userId} and password = #{password}
	</update>

    <delete id="deleteBatch">
        delete from sys_user where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        delete from sys_user_role where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>